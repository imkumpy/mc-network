---
# Run command below to run playbook
# ansible-playbook --ask-vault-pass playbook.yml

- hosts: localhost
  vars_files:
    - 'vars/vault.yaml'

  pre_tasks:
  - name: Configure uid for docker_compose_generator
    command: id -u
    register: docker_compose_generator_uid
  - set_fact:
      docker_compose_generator_uid={{ docker_compose_generator_uid.stdout }}

  - name: Configure gid for docker_compose_generator
    command: id -g
    register: docker_compose_generator_gid
  - set_fact:
      docker_compose_generator_gid={{ docker_compose_generator_gid.stdout }}

  roles:
#    - role: geerlingguy.docker
    - role: ironicbadger.ansible_role_docker_compose_generator
  tasks:
  - name: Ensure container volume mounts points are created
    file:
      path: "data/{{ item.service_name }}"
      state: directory
    loop: "{{ containers }}"

  - name: Ensure luckperms folders are created
    file:
      path: "data/{{ item.service_name }}/plugins/LuckPerms"
      state: directory
    loop: "{{ containers }}"
    when: item.environment[0] == 'TYPE=PAPER'

  - name: Ensure fabric config folder is created
    file:
      path: "data/{{ item.service_name }}/config"
      state: directory
    loop: "{{ containers }}"
    when: item.environment[0] == 'TYPE=FABRIC'

  - name: Configure waterfall proxy
    template:
      src: templates/waterfall-config.yml.j2
      dest: "data/{{ item.service_name }}/config.yml"
      owner: "{{ docker_compose_generator_uid }}"
      group: "{{ docker_compose_generator_gid }}"
    loop: "{{ containers }}"
    when: item.image == 'itzg/bungeecord'

  - name: Configure luckperms for the paper/spigot servers
    template:
      src: templates/luckperms-config.yml.j2
      dest: "data/{{ item.service_name }}/plugins/LuckPerms/config.yml"
      owner: "{{ docker_compose_generator_uid }}"
      group: "{{ docker_compose_generator_gid }}"
    loop: "{{ containers }}"
    when: item.environment[0] == 'TYPE=PAPER'

  - name: Configure FabricProxy for the Fabric servers
    template:
      src: templates/FabricProxy.toml.j2
      dest: "data/{{ item.service_name }}/config/FabricProxy.toml"
      owner: "{{ docker_compose_generator_uid }}"
      group: "{{ docker_compose_generator_gid }}"
    loop: "{{ containers }}"
    when: item.environment[0] == 'TYPE=FABRIC'

# Uncomment Below if you wish for server network to be started at end of playbook
#  - name: Start server network using docker-compose
#    community.general.docker_compose:
#      project_src: .
